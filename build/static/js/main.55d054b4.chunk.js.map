{"version":3,"sources":["services/index.js","utils/IterateArray.js","components/ButtonAdd/index.js","components/Form/index.js","hooks/useNearScreen.js","components/TrTable/index.js","components/CoinsTable/index.js","hooks/useStateSaveWord.js","hooks/useFindData.js","components/CoinsDataTable/index.js","components/InfoTitle/index.js","components/CoinStrip/index.js","components/DataCoinStrip/index.js","components/NewsData/index.js","components/DataInformation/index.js","pages/Home/index.js","App.js","serviceWorker.js","index.js"],"names":["url","a","fetch","response","ok","Error","status","json","getDataFetch","IterateArray","array","property","onClick","Component","map","item","key","styled","button","props","primary","ButtonAdd","classButton","console","log","className","xlinkHref","React","memo","updateKeyword","label","placeHolder","classError","useState","value","setValue","onSubmit","e","preventDefault","aria-label","classactive","tooltip","type","onChange","target","placeholder","useNearScreen","distance","show","setShow","elementRef","useRef","useEffect","IntersectionObserver","entries","observer","el","isIntersecting","classList","add","disconnect","rootMargin","observe","current","TrTable","formatPrice","Intl","NumberFormat","format","current_price","fixedPercentage","price_change_percentage_24h","toFixed","classPercentage","formatMarketCap","market_cap","market_cap_rank","src","image","alt","name","id","data-id","CoinsTable","length","useStateSaveWord","JSON","parse","localStorage","getItem","localKeyword","setLocalKeyword","setItem","stringify","urlTable","useFindData","keyword","coinId","setCoinID","arrayCoins","setArrayCoins","setClassError","data","find","coin","setTimeout","prev","findIndex","getDataCoinId","catch","error","filtered","arr","compare","notEqual","filter","CoinsDataTable","word","resultFilter","handleClick","useCallback","copyArrayCoin","copyArrayKeyword","remainingCoins","remainingWords","update","includes","Form","InfoTitle","spanTitle","CoinStrip","DataCoinStrip","coinStrip","setCoinStrip","urlList","NewsData","lazy","LazyNewsData","setCurrent","ref","fallback","WithDataInformation","setKeyword","Home","DataTable","DataNews","LazyNewsdata","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","message"],"mappings":"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","file":"static/js/main.55d054b4.chunk.js","sourcesContent":["\n\nasync function getDataFetch(url) {\n  try {\n    const response = await fetch(url)\n    if(!response.ok) {\n      throw new Error(`Error: ${response.status}`)\n    }\n    return response.json()\n  } catch (error) {\n    throw new Error(error)\n  }\n}\n\nexport default getDataFetch\n","import React from \"react\";\n\nfunction IterateArray({ array, property, onClick, Component }) {\n  return array.map((item) => (\n    <Component key={item[property]} item={item} onClick={onClick} />\n  ));\n}\nexport default IterateArray;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport \"./ButtonAdd.css\";\n\nconst Button = styled.button`\n  background: ${(props) => (props.primary ? \"grey\" : \"none\")};\n  border: 1px solid #f7a400;\n  border-radius: 30px;\n  box-shadow: 0 0px 25px 1px rgba(547, 164, 0, 0.3);\n  color: #3e4491;\n  cursor: pointer;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 35px;\n  height: 35px;\n  position: relative;\n`;\n\nfunction ButtonAdd({ classButton, onClick }) {\n  console.log(classButton) \n  return (\n    <button onClick={onClick} className={classButton}>\n      <svg className=\"icon icon-plus\"><use xlinkHref=\"#icon-plus\"></use></svg>\n    </button>\n    // <>\n    //   <Button>\n    //     <svg className=\"icon icon-plus\">\n    //       <use xlinkHref=\"#icon-plus\"></use>\n    //     </svg>\n    //   </Button>\n    // </>\n  );\n}\n\nexport default ButtonAdd;\n","import React, { useState } from \"react\";\nimport \"./Form.css\";\nimport ButtonAdd from \"../ButtonAdd\";\n\nfunction Form(props) {\n  const { updateKeyword, label, placeHolder, classButton, classError } = props;\n  const [value, setValue] = useState(\"\");\n\n  const handleSubmit = (e) => {\n    if (!value) {\n      e.preventDefault();\n      return;\n    }\n    updateKeyword(value);\n    setValue(\"\");\n    e.preventDefault();\n  };\n\n  const handleChange = (e) => {\n    setValue(e.target.value);\n  };\n\n  return (\n    <form\n      className={`form-data`}\n      onSubmit={handleSubmit}\n      aria-label=\"add new currency\"\n    >\n      <div className=\"App-section-coin-content-input\">\n        <label>\n          <span>{label}</span>\n          <div\n            className={`App-section-coin-content-input-button  ${classError}`}\n            classactive={classError}\n            tooltip=\"Data not found...\"\n          >\n            <input\n              className=\"form-input\"\n              type=\"text\"\n              value={value}\n              onChange={handleChange}\n              placeholder={`E.g ${placeHolder}`}\n            ></input>\n            <ButtonAdd classButton={classButton} />\n          </div>\n        </label>\n      </div>\n    </form>\n  );\n}\n\nexport default React.memo(Form);\n","import {useEffect, useState, useRef} from \"react\"\n\nfunction useNearScreen({distance = \"0px\"}) {\n  const [show, setShow] = useState(false)\n  const elementRef = useRef()\n\n  useEffect(() => {\n    const isObserver = (entries, observer) => {\n      const el = entries[0]\n      if(el.isIntersecting) {\n        if(el.target.className === \"content-articles\") {\n          el.target.classList.add(\"display\")\n          setShow(true)\n          observer.disconnect()\n        }else {\n          setShow(true)\n        }\n      }\n    } \n  \n    const observer = new IntersectionObserver(isObserver, {\n      rootMargin: distance\n    })\n    observer.observe(elementRef.current)\n    \n  })\n  return {show, elementRef}\n}\n\nexport default useNearScreen","import React from \"react\";\nimport \"./TrTable.css\";\n\nfunction TrTable({ item, onClick }) {\n  const formatPrice = new Intl.NumberFormat().format(item.current_price)\n  const fixedPercentage = item.price_change_percentage_24h.toFixed(2);\n  const classPercentage =\n    fixedPercentage < 0 ? \"low-percentage\" : \"high-percentage\";\n  const formatMarketCap = new Intl.NumberFormat().format(item.market_cap);\n\n  return (\n    <tr className={`App-section-coin-table-coin ro`}>\n      <td>\n        <div>{item.market_cap_rank}</div>\n      </td>\n      <td>\n        <div className=\"App-section-coin-table-coindata\">\n          <div className=\"App-section-coin-table-coindata-img\">\n            <img src={item.image} alt=\"\"></img>\n          </div>\n          <span>{item.name}</span>\n        </div>\n      </td>\n      <td>\n        <div>${formatMarketCap}</div>\n      </td>\n      <td>\n        <div>${formatPrice}</div>\n      </td>\n      <td>\n        <div className={classPercentage}>{fixedPercentage}%</div>\n        <div\n          className=\"remove\"\n          onClick={() => onClick(item.id)}\n          data-id={item.id}\n        >\n          <span>\n            <svg className=\"icon icon-cancel-circle\">\n              <use xlinkHref=\"#icon-cancel-circle\"></use>\n            </svg>\n          </span>\n        </div>\n      </td>\n    </tr>\n  );\n}\n\nexport default TrTable;\n","import React from \"react\";\nimport IterateArray from \"../../utils/IterateArray\";\nimport TrTable from \"../TrTable\";\nimport \"./CoinsTable.css\";\n\nfunction CoinsTable({ array, onClick }) {\n  return (\n    <div className={`App-section-coin-info`}>\n      <table className=\"App-section-coin-table\">\n        <thead>\n          <tr>\n            <th>\n              <div>\n                <span>Rank</span>\n              </div>\n            </th>\n            <th>\n              <div>\n                <span>Name</span>\n              </div>\n            </th>\n            <th>\n              <div>\n                <span>Market Cap</span>\n              </div>\n            </th>\n            <th>\n              <div>\n                <span>Price</span>\n              </div>\n            </th>\n            <th>\n              <div>\n                <span>Change (24h)</span>\n              </div>\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          {!array.length ? (\n            <tr className=\"empty-chart\">\n              <th>Add a coin, buddy...</th>\n            </tr>\n          ) : (\n            <IterateArray\n              array={array}\n              property={\"id\"}\n              Component={TrTable}\n              onClick={onClick}\n            />\n          )}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default CoinsTable;\n","import { useState, useEffect } from \"react\"\n\nfunction useStateSaveWord() {\n  const [localKeyword, setLocalKeyword] = useState(JSON.parse(localStorage.getItem(\"coin\")) || [])\n  useEffect(() => {\n    localStorage.setItem(\"coin\", JSON.stringify(localKeyword))\n  }, [localKeyword])\n\n  return [localKeyword, setLocalKeyword]\n}\n\nexport default useStateSaveWord","import { useEffect, useRef, useState } from \"react\";\nimport getDataFetch from \"../services/index\";\n\nconst urlTable = `https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=100&page=1&sparkline=false`;\nconst urlCoinId = (word) =>\n  `https://api.coingecko.com/api/v3/coins/${word}?tickers=false&community_data=false&developer_data=false&sparkline=false`;\n\nfunction useFindData({ keyword }) {\n  const [coinId, setCoinID] = useState([]);\n  const [arrayCoins, setArrayCoins] = useState([]);\n  const [classError, setClassError] = useState(\"\");\n\n  useEffect(() => {\n    async function getDataCoinId() {\n      const data = await getDataFetch(urlTable);\n      setArrayCoins(data);\n      const find = data.find((coin) => coin.id === keyword);\n      if (keyword && !find) {\n        setClassError(\"error\");\n        setTimeout(() => {\n          setClassError(\"\");\n        }, 800);\n        return;\n      }\n      if (keyword) {\n        setCoinID((prev) => {\n          const findIdx = prev.findIndex((item) => item.id === keyword);\n          if (findIdx === -1) {\n            return [...prev, find];\n          } else {\n            return [...prev];\n          }\n        });\n      }\n    }\n    getDataCoinId().catch((error) => {\n      throw new Error(error);\n    });\n  }, [keyword]);\n\n  return { coinId, setCoinID, arrayCoins, classError };\n}\n\nexport default useFindData;\n","import React, { useEffect, useCallback } from \"react\";\nimport CoinsTable from \"../CoinsTable\";\nimport useStateSaveWord from \"../../hooks/useStateSaveWord\";\nimport Form from \"../../components/Form\";\nimport useFindData from \"../../hooks/useFindData\";\nimport getDataFetch from \"../../services\";\n\nconst urlTable = `https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=100&page=1&sparkline=false`;\n\nfunction filtered(arr, compare, notEqual) {\n  if (notEqual) {\n    const filter = arr.filter((item) => item.id !== compare);\n    return filter;\n  } else {\n    const filter = arr.filter((item) => item.id === compare);\n    return filter;\n  }\n}\n\nfunction CoinsDataTable({ label, keyword, updateKeyword }) {\n  const { coinId, setCoinID, arrayCoins, classError } = useFindData({\n    keyword,\n  });\n  const [localKeyword, setLocalKeyword] = useStateSaveWord();\n\n  useEffect(() => {\n    if (!keyword) return;\n    setLocalKeyword((prev) => {\n      const findWord = prev.findIndex((word) => word === keyword);\n      if (findWord === -1) {\n        return [...prev, keyword];\n      } else {\n        return [...prev];\n      }\n    });\n  }, [keyword, setLocalKeyword]);\n\n  useEffect(() => {\n    //Search local storage for keywords and filter the array with those matches for up-to-date information\n    const findWord = localKeyword.map((word) => {\n      const resultFilter = filtered(arrayCoins, word, false);\n      setCoinID((prev) => {\n        const findIndex = prev.findIndex(({ id }) => id === word);\n        if (findIndex === -1) {\n          return [...prev, ...resultFilter];\n        } else {\n          return [...prev];\n        }\n      });\n    });\n    return () => console.log(\"unmount\");\n  }, [localKeyword, arrayCoins, setCoinID]);\n\n  const handleClick = useCallback(\n    (name) => {\n      const copyArrayCoin = [...coinId];\n      const copyArrayKeyword = [...localKeyword];\n      const remainingCoins = filtered(copyArrayCoin, name, true);\n      const remainingWords = copyArrayKeyword.filter((item) => item !== name);\n      setLocalKeyword(remainingWords);\n      setCoinID(remainingCoins);\n    },\n    [coinId, localKeyword, setCoinID, setLocalKeyword]\n  );\n\n  const update = useCallback(async () => {\n    const data = await getDataFetch(urlTable);\n    const filter = data.filter((coin) => localKeyword.includes(coin.id));\n    setCoinID(filter);\n  }, [localKeyword, setCoinID]);\n\n  return (\n    <>\n      <div className=\"App-section-content-form\">\n        <div onClick={update} className=\"update\">\n          <span className=\"refresh\">Refresh</span>\n          <span className=\"content-icon-refresh\">\n            <svg className=\"icon icon-loop2\">\n              <use xlinkHref=\"#icon-loop2\"></use>\n            </svg>\n          </span>\n        </div>\n        <Form\n          updateKeyword={updateKeyword}\n          label={label}\n          placeHolder={\"bitcoin, ethereum\"}\n          classError={classError}\n          classButton={\"button-add-coin\"}\n        />\n      </div>\n      <CoinsTable array={coinId} onClick={handleClick} />\n    </>\n  );\n}\n\nexport default CoinsDataTable;\n","import React from \"react\"\nimport \"./InfoTitle.css\"\n\nfunction InfoTitle({spanTitle}) {\n  return (\n    <div className=\"content-title-coin\">\n      <div className=\"content-no-flip-text\">\n      <span>{spanTitle}</span>\n        <span className=\"text-flip\">ETH</span>\n        <span className=\"text-flip\">XRP</span>\n        <span className=\"text-flip\">BTC</span>\n        <span className=\"text-flip\">BNB</span>\n        <span className=\"text-flip\">ETH</span>\n        <span className=\"text-flip\">XRP</span>\n        <span className=\"text-flip\">BTC</span>\n        <span className=\"text-flip\">BNB</span>\n      </div>\n    </div>\n  )\n}\n\nexport default InfoTitle","import React from \"react\"\nimport \"./CoinStrip.css\"\n\nfunction CoinStrip({item}) {\n  const fixedPercentage = item.price_change_percentage_24h.toFixed(2)\n  const classPercentage = fixedPercentage < 0 ? \"low-percentage\" : \"high-percentage\"\n  \n  return (\n    <div className=\"parent-content-coins\">\n      <div className=\"content-coins\">\n        <div className=\"img-coin-band\"> \n          <div className=\"content-img-coin-band\">\n            <img alt=\"\" src={item.image} />\n          </div>\n          <div className=\"coin-name\"><span>{item.id}</span></div>\n        </div>\n        <span className=\"coin-price\">${item.current_price}</span>\n        <span className={classPercentage}>{fixedPercentage}%</span>\n      </div>\n    </div>\n  )\n}\n\nexport default CoinStrip","import React, {useEffect, useState} from \"react\"\nimport getDataFetch from \"../../services\"\nimport IterateArray from \"../../utils/IterateArray\"\nimport CoinStrip from \"../../components/CoinStrip\"\n\nconst url = (number) => \n  `https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=${number}&page=1&sparkline=false`\n\nfunction DataCoinStrip() {\n  const [coinStrip, setCoinStrip] = useState([])\n\n   useEffect(() => {\n    (async function getData() {\n      const urlList = url(10)\n      const data = await getDataFetch(urlList)\n      setCoinStrip(data)\n    })().catch(error => console.log(error));\n  }, [])\n\n  return (\n    <>\n      <IterateArray \n        array={coinStrip} \n        property={\"id\"} \n        Component={CoinStrip} \n      />\n      <IterateArray \n        array={coinStrip} \n        property={\"id\"} \n        Component={CoinStrip} \n      />\n    </>\n  )\n}\n\nexport default DataCoinStrip","import React, { Suspense, useState, useEffect } from \"react\";\nimport useNearScreen from \"../../hooks/useNearScreen\";\nimport PropTypes from \"prop-types\";\nimport ButtonAdd from \"../ButtonAdd\";\nimport \"./NewsData.css\";\n\nconst NewsData = React.lazy(() => import(\"./NewsData\"));\n\nfunction LazyNewsData({ label, keyword, updateKeyword }) {\n  const { show, elementRef } = useNearScreen({ distance: \"0px\" });\n  const [current, setCurrent] = useState(0);\n\n  useEffect(() => {\n    setCurrent(0);\n  }, [keyword]);\n\n  const handleClick = () => {\n    setCurrent((prev) => (prev += 1));\n  };\n\n  return (\n    <div className=\"content-all-news\" ref={elementRef}>\n      {show ? (\n        <Suspense fallback={\"cargando...\"}>\n          <NewsData\n            label={label}\n            keyword={keyword}\n            updateKeyword={updateKeyword}\n            current={current}\n          />\n        </Suspense>\n      ) : null}\n      <ButtonAdd onClick={handleClick} classButton={\"more\"} />\n    </div>\n  );\n}\n\nLazyNewsData.propTypes = {\n  keyword: PropTypes.string,\n};\nexport default LazyNewsData;\n","import React, { useState } from \"react\"\n\nfunction WithDataInformation(Component) {\n  return function WithUpdateInformation({label}) {\n    const [keyword, setKeyword] = useState()\n    \n    const updateKeyword = (keyword) => {\n      setKeyword(keyword)\n    }\n    \n    return (\n      <>\n        <Component \n          label={label} \n          keyword={keyword} \n          updateKeyword={updateKeyword}\n        />\n      </>\n    )\n  }\n}\nexport default WithDataInformation","import React from \"react\";\nimport CoinsDataTable from \"../../components/CoinsDataTable\";\nimport InfoTitle from \"../../components/InfoTitle\";\nimport DataCoinStrip from \"../../components/DataCoinStrip\";\nimport LazyNewsdata from \"../../components/NewsData\";\nimport \"./Home.css\";\nimport WithDataInformation from \"../../components/DataInformation\";\n\nfunction Home() {\n  const DataTable = WithDataInformation(CoinsDataTable);\n  const DataNews = WithDataInformation(LazyNewsdata);\n\n  return (\n    <>\n      <section className=\"App-section-headband\">\n        <div className=\"App-section-headband-content-coins\">\n          <DataCoinStrip />\n        </div>\n      </section>\n\n      <section className=\"App-section-main\">\n        <section className=\"App-section-coin\">\n          <InfoTitle spanTitle={\"Coins Market\"} />\n          <div className=\"toBottom\">\n            <svg className=\"icon icon-ctrl\">\n              <use xlinkHref=\"#icon-ctrl\"></use>\n            </svg>\n            <svg className=\"icon icon-ctrl\">\n              <use xlinkHref=\"#icon-ctrl\"></use>\n            </svg>\n            <svg className=\"icon icon-ctrl\">\n              <use xlinkHref=\"#icon-ctrl\"></use>\n            </svg>\n          </div>\n          <DataTable label=\"Add currency to chart\" />\n        </section>\n\n        <section className=\"App-section-news\">\n          <InfoTitle spanTitle={\"News about\"} />\n          <DataNews label=\"Search news by keyword\"/>\n        </section>\n      </section>\n    </>\n  );\n}\n\nexport default Home;\n","import React from 'react';\nimport './App.css';\nimport Home from \"./pages/Home\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home/>\n    </div>\n  );\n}\n\nexport default App;\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}