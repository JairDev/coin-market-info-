{"version":3,"sources":["utils/IterateArray.js","services/index.js","components/ButtonAdd/index.js","components/Form/index.js","hooks/useNearScreen.js","components/TrTable/index.js","components/CoinsTable/index.js","hooks/useStateSaveWord.js","hooks/useFindData.js","components/CoinsDataTable/index.js","components/DataInformation/index.js","components/InfoTitle/index.js","components/CoinStrip/index.js","components/DataCoinStrip/index.js","components/NewsData/index.js","pages/Home/index.js","App.js","serviceWorker.js","index.js"],"names":["IterateArray","array","property","onClick","keyword","Component","map","item","key","url","a","fetch","response","ok","Error","status","json","getDataFetch","ButtonAdd","classButton","className","xlinkHref","React","memo","props","updateKeyword","label","placeHolder","classError","useState","value","setValue","onSubmit","e","preventDefault","aria-label","tooltip","type","onChange","target","placeholder","useNearScreen","distance","show","setShow","elementRef","useRef","useEffect","IntersectionObserver","entries","observer","el","isIntersecting","classList","add","disconnect","rootMargin","observe","current","TrTable","fixedPercentage","price_change_percentage_24h","toFixed","classPercentage","market_cap_rank","src","image","alt","name","market_cap","current_price","id","data-id","CoinsTable","useStateSaveWord","JSON","parse","localStorage","getItem","localKeyword","setLocalKeyword","setItem","stringify","urlTable","useFindData","coinId","setCoinID","arrayCoins","setArrayCoins","setClassError","data","find","coin","setTimeout","prev","findIndex","getDataCoinId","catch","error","CoinsDataTable","word","filter","useCallback","copyArrayCoin","copyArrayKeyword","remainingCoins","remainingWords","Form","DataInformation","DataComponent","setKeyword","setCurrent","handleClick","InfoTitle","spanTitle","CoinStrip","DataCoinStrip","coinStrip","setCoinStrip","urlList","console","log","NewsData","lazy","LazyNewsData","ref","fallback","Home","LazyNewsdata","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","message"],"mappings":"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","file":"static/js/main.69f13fc3.chunk.js","sourcesContent":["import React from \"react\"\n\nfunction IterateArray({array, property, onClick, keyword, Component}) {\n  return (\n    array.map(item => \n      <Component \n        key={item[property]} \n        item={item} \n        onClick={onClick}\n        keyword={keyword}\n      />\n    )\n  )\n}\nexport default IterateArray","\nasync function getDataFetch(url) {\n  try {\n    const response = await fetch(url)\n    if(!response.ok) {\n      throw new Error(`Error: ${response.status}`)\n    }\n    return response.json()\n  } catch (error) {\n    throw new Error(error)\n  }\n}\n\nexport default getDataFetch\n","import React from \"react\"\nimport \"./ButtonAdd.css\"\n\nfunction ButtonAdd({classButton,onClick}) {\n  return (\n    <button onClick={onClick} className={classButton}>\n      <svg className=\"icon icon-plus\"><use xlinkHref=\"#icon-plus\"></use></svg>\n    </button>\n  )\n}\n\nexport default ButtonAdd","import React, { useState } from \"react\"\nimport \"./Form.css\"\nimport ButtonAdd from \"../ButtonAdd\"\n\nfunction Form(props) {\n  const {\n    updateKeyword,\n    label,\n    placeHolder,\n    classButton,\n    classError\n  } = props\n\n  const [value, setValue] = useState(\"\")\n\n  const handleSubmit = (e) => {\n    if(!value) {\n      e.preventDefault()\n      return;\n    }\n    updateKeyword(value)\n    setValue(\"\")\n    e.preventDefault()\n  }\n\n  const handleChange = (e) => {\n    setValue(e.target.value)\n  }\n\n  return (\n    <form className={`form-data`} onSubmit={handleSubmit} aria-label=\"add new currency\">\n      <div className=\"App-section-coin-content-input\">\n        <label>\n          <span>{label}</span>\n          <div className={`App-section-coin-content-input-button ${classError}`} tooltip=\"Data not found...\">\n            <input className=\"form-input\" type=\"text\" value={value} onChange={handleChange} placeholder={`E.g ${placeHolder}`}></input>\n            <ButtonAdd classButton={classButton}/>\n          </div>\n        </label>\n      </div>\n    </form>\n  )\n}\n\nexport default React.memo(Form)","import {useEffect, useState, useRef} from \"react\"\n\nfunction useNearScreen({distance = \"0px\"}) {\n  const [show, setShow] = useState(false)\n  const elementRef = useRef()\n\n  useEffect(() => {\n    const isObserver = (entries, observer) => {\n      const el = entries[0]\n      if(el.isIntersecting) {\n        if(el.target.className === \"content-articles\") {\n          el.target.classList.add(\"display\")\n          setShow(true)\n          observer.disconnect()\n        }else {\n          setShow(true)\n        }\n      }\n    } \n  \n    const observer = new IntersectionObserver(isObserver, {\n      rootMargin: distance\n    })\n    observer.observe(elementRef.current)\n    \n  })\n  return {show, elementRef}\n}\n\nexport default useNearScreen","import React from \"react\"\nimport \"./TrTable.css\"\n\nfunction TrTable({item, onClick}) {\n  const fixedPercentage = item.price_change_percentage_24h.toFixed(2)\n  const classPercentage = fixedPercentage < 0 ? \"low-percentage\" : \"high-percentage\"\n\n  return (\n    <tr className={`App-section-coin-table-coin ro`}>\n      <td>\n        <div>\n          {item.market_cap_rank}\n        </div>\n      </td>\n      <td>\n        <div className=\"App-section-coin-table-coindata\">\n          <div className=\"App-section-coin-table-coindata-img\"><img src={item.image} alt=\"\"></img></div>\n          <span>\n            {item.name}\n          </span>\n        </div>\n      </td>\n      <td>\n        <div>\n          ${item.market_cap}\n        </div>\n      </td>\n      <td>\n        <div>\n          ${item.current_price}\n        </div>\n      </td>\n      <td>\n        <div className={classPercentage}>\n          {fixedPercentage}%\n        </div>\n        <div className=\"remove\" onClick={() => onClick(item.id)} data-id={item.id}>\n          <span>\n            <svg className=\"icon icon-cancel-circle\">\n              <use xlinkHref=\"#icon-cancel-circle\"></use>\n            </svg>\n          </span>\n        </div>\n      </td>\n    </tr>\n  )\n}\n\nexport default TrTable","import React from \"react\"\nimport IterateArray from \"../../utils/IterateArray\"\nimport TrTable from \"../TrTable\"\nimport \"./CoinsTable.css\"\n\nfunction CoinsTable({array, onClick}) {\n  return (\n    <div className={`App-section-coin-info`}>\n      <table className=\"App-section-coin-table\">\n        <thead>\n          <tr>\n            <th>\n              <div>\n                <span>Rank</span>\n              </div>\n            </th>\n            <th>\n              <div>\n              <span>Name</span>\n              </div>\n            </th>\n            <th>\n              <div>\n              <span>Market Cap</span>\n              </div>\n            </th>\n            <th>\n              <div>\n              <span>Price</span>\n              </div>\n            </th>\n            <th>\n              <div>\n              <span>Change (24h)</span>\n              </div>\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n         { \n          <IterateArray \n            array={array} \n            property={\"id\"} \n            Component={TrTable}\n            onClick={onClick}\n          />\n         }\n        </tbody>\n      </table>\n    </div>\n  )\n}\n\nexport default CoinsTable","import { useState, useEffect } from \"react\"\n\nfunction useStateSaveWord() {\n  const [localKeyword, setLocalKeyword] = useState(JSON.parse(localStorage.getItem(\"coin\")) || [])\n  useEffect(() => {\n    localStorage.setItem(\"coin\", JSON.stringify(localKeyword))\n  }, [localKeyword])\n\n  return [localKeyword, setLocalKeyword]\n}\n\nexport default useStateSaveWord","import {useEffect, useState} from \"react\"\nimport getDataFetch from \"../services/index\";\n\nconst urlTable = `https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=100&page=1&sparkline=false`;\n\nfunction useFindData({keyword}) {\n  const [coinId, setCoinID] = useState([]);\n  const [arrayCoins, setArrayCoins] = useState([]);\n  const [classError, setClassError] = useState(\"\");\n\n  useEffect(() => {\n    async function getDataCoinId() {\n      const data = await getDataFetch(urlTable);\n      setArrayCoins(data);\n      const find = data.find((coin) => coin.id === keyword);\n      if (!find) {\n        setClassError(\"error\");\n        setTimeout(() => {\n          setClassError(\"\");\n        }, 800);\n        return;\n      }\n      setCoinID((prev) => {\n        const findIdx = prev.findIndex((item) => item.id === keyword);\n        if (findIdx === -1) {\n          return [...prev, find];\n        } else {\n          return [...prev];\n        }\n      });\n    }\n    getDataCoinId().catch((error) => {throw new Error(error)})\n  }, [keyword])\n\n  return {coinId, setCoinID, arrayCoins, classError}\n}\n\nexport default useFindData","import React, { useEffect, useCallback} from \"react\";\nimport CoinsTable from \"../CoinsTable\";\nimport useStateSaveWord from \"../../hooks/useStateSaveWord\";\nimport Form from \"../../components/Form\";\nimport useFindData from \"../../hooks/useFindData\"\n\nfunction CoinsDataTable({keyword = \"ethereum\", label, updateKeyword}) {\n  const { coinId, setCoinID, arrayCoins, classError } = useFindData({keyword})\n  const [localKeyword, setLocalKeyword] = useStateSaveWord();\n\n  useEffect(() => {\n    setLocalKeyword((prev) => {\n      const findWord = prev.findIndex((word) => word === keyword);\n      if (findWord === -1) {\n        return [...prev, keyword];\n      } else {\n        return [...prev];\n      }\n    });\n  }, [keyword, setLocalKeyword]);\n\n  useEffect(() => {\n    const findWord = localKeyword.map((word) => {\n      const filter = arrayCoins.filter((item) => item.id === word);\n      setCoinID((prev) => {\n        const findIndex = prev.findIndex((item) => item.id === word);\n        if (findIndex === -1) {\n          return [...prev, ...filter];\n        } else {\n          return [...prev];\n        }\n      });\n      return filter;\n    });\n  }, [localKeyword, arrayCoins, setCoinID]);\n\n\n  const onClick = useCallback((id) => {\n    const copyArrayCoin = [...coinId];\n    const copyArrayKeyword = [...localKeyword];\n    const remainingCoins = copyArrayCoin.filter(item => item.id !== id)\n    const remainingWords = copyArrayKeyword.filter(item => item !== id)\n    setLocalKeyword(remainingWords);\n    setCoinID(remainingCoins);\n  },[coinId, localKeyword, setCoinID, setLocalKeyword]);\n\n  return (\n    <>\n      <div className=\"App-section-content-form\">\n        <Form\n          updateKeyword={updateKeyword}\n          label={label}\n          placeHolder={\"bitcoin, ethereum\"}\n          classError={classError}\n          classButton={\"button-add-coin\"}\n        />\n      </div>\n      <CoinsTable array={coinId} onClick={onClick}/>\n    </>\n  );\n}\n\nexport default CoinsDataTable;\n","import React, { useState } from \"react\"\nimport \"./DataInformation.css\"\n\nfunction DataInformation({ label, DataComponent }) {\n  const [keyword, setKeyword] = useState()\n  const [current, setCurrent] = useState(0);\n\n  const updateKeyword = (keyword) => {\n    setCurrent(0)\n    setKeyword(keyword)\n  }\n\n  const handleClick = () => {\n    setCurrent((prev) => (prev += 1));\n  };\n  \n  return (\n    <>\n      <DataComponent \n        keyword={keyword} \n        current={current}\n        label={label} \n        handleClick={handleClick}\n        updateKeyword={updateKeyword}\n      />\n    </>\n  )\n}\n\nexport default DataInformation","import React from \"react\"\nimport \"./InfoTitle.css\"\n\nfunction InfoTitle({spanTitle}) {\n  return (\n    <div className=\"content-title-coin\">\n      <div className=\"content-no-flip-text\">\n      <span>{spanTitle}</span>\n        <span className=\"text-flip\">ETH</span>\n        <span className=\"text-flip\">XRP</span>\n        <span className=\"text-flip\">BTC</span>\n        <span className=\"text-flip\">BNB</span>\n        <span className=\"text-flip\">ETH</span>\n        <span className=\"text-flip\">XRP</span>\n        <span className=\"text-flip\">BTC</span>\n        <span className=\"text-flip\">BNB</span>\n      </div>\n    </div>\n  )\n}\n\nexport default InfoTitle","import React from \"react\"\nimport \"./CoinStrip.css\"\n\nfunction CoinStrip({item}) {\n  const fixedPercentage = item.price_change_percentage_24h.toFixed(2)\n  const classPercentage = fixedPercentage < 0 ? \"low-percentage\" : \"high-percentage\"\n  \n  return (\n    <div className=\"parent-content-coins\">\n      <div className=\"content-coins\">\n        <div className=\"img-coin-band\"> \n          <div className=\"content-img-coin-band\">\n            <img alt=\"\" src={item.image} />\n          </div>\n          <div className=\"coin-name\"><span>{item.id}</span></div>\n        </div>\n        <span className=\"coin-price\">${item.current_price}</span>\n        <span className={classPercentage}>{fixedPercentage}%</span>\n      </div>\n    </div>\n  )\n}\n\nexport default CoinStrip","import React, {useEffect, useState} from \"react\"\nimport getDataFetch from \"../../services\"\nimport IterateArray from \"../../utils/IterateArray\"\nimport CoinStrip from \"../../components/CoinStrip\"\n\nconst url = (number) => \n  `https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=${number}&page=1&sparkline=false`\n\nfunction DataCoinStrip() {\n  const [coinStrip, setCoinStrip] = useState([])\n\n   useEffect(() => {\n    (async function getData() {\n      const urlList = url(10)\n      const data = await getDataFetch(urlList)\n      setCoinStrip(data)\n    })().catch(error => console.log(error));\n  }, [])\n\n  return (\n    <>\n      <IterateArray \n        array={coinStrip} \n        property={\"id\"} \n        Component={CoinStrip} \n      />\n      <IterateArray \n        array={coinStrip} \n        property={\"id\"} \n        Component={CoinStrip} \n      />\n    </>\n  )\n}\n\nexport default DataCoinStrip","import React, { Suspense } from \"react\"\nimport useNearScreen from \"../../hooks/useNearScreen\"\n// import NewsData from \"./NewsData\"\nimport PropTypes from 'prop-types';\nimport ButtonAdd from \"../ButtonAdd\"\nimport \"./NewsData.css\";\n\nconst NewsData = React.lazy(() => import(\"./NewsData\"))\n\nfunction LazyNewsData({keyword, label, current, handleClick, updateKeyword}) {\n  const {show, elementRef}= useNearScreen({distance: \"0px\"})\n\n  return (\n    <div className=\"content-all-news\" ref={elementRef}>\n      {show ?\n        <Suspense fallback={\"cargando...\"}>\n          <NewsData \n            current={current} \n            keyword={keyword}\n            label={label}\n            updateKeyword={updateKeyword}\n          />\n        </Suspense> : null}\n      <ButtonAdd \n        onClick={handleClick} \n        classButton={\"more\"}\n      />\n    </div>\n  )\n}\n\nLazyNewsData.propTypes = {\n  keyword: PropTypes.string\n}\nexport default LazyNewsData","import React from \"react\"\nimport CoinsDataTable from \"../../components/CoinsDataTable\"\nimport DataInformation from \"../../components/DataInformation\"\nimport InfoTitle from \"../../components/InfoTitle\"\nimport DataCoinStrip from \"../../components/DataCoinStrip\"\nimport LazyNewsdata from \"../../components/NewsData\"\nimport \"./Home.css\"\n\n\nfunction Home() {\n  return (\n    <>\n      <section className=\"App-section-headband\">\n        <div className=\"App-section-headband-content-coins\">\n          <DataCoinStrip/> \n        </div>\n      </section>\n\n      <section className=\"App-section-main\">\n        <section className=\"App-section-coin\">\n          <InfoTitle spanTitle={\"Coins Market\"}/>\n          <div className=\"toBottom\">\n            <svg className=\"icon icon-ctrl\"><use xlinkHref=\"#icon-ctrl\"></use></svg>\n            <svg className=\"icon icon-ctrl\"><use xlinkHref=\"#icon-ctrl\"></use></svg>\n            <svg className=\"icon icon-ctrl\"><use xlinkHref=\"#icon-ctrl\"></use></svg>\n          </div>\n          <DataInformation\n            label={\"Add currency to chart\"}\n            DataComponent={CoinsDataTable}\n          />\n        </section>\n\n        <section className=\"App-section-news\">\n          <InfoTitle spanTitle={\"News about\"}/>\n          <DataInformation\n            label={\"Search news by keyword\"}\n            DataComponent={LazyNewsdata}\n          />\n        </section>\n      </section>\n    </>\n  )\n}\n\nexport default Home","import React from 'react';\nimport './App.css';\nimport Home from \"./pages/Home\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home/>\n    </div>\n  );\n}\n\nexport default App;\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}